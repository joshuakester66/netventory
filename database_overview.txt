CREATE DATABASE netventory

CREATE TABLE arp (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) DEFAULT '0',
ip varchar(50) DEFAULT NULL,
mac varchar(50) DEFAULT NULL,
updated timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id),
KEY device (device_id),
CONSTRAINT device FOREIGN KEY (device_id) REFERENCES device (id) ON DELETE CASCADE ON UPDATE CASCADE
)

CREATE VIEW netventory.arp_view AS select netventory.arp.ip AS ip,netventory.arp.mac AS mac,netventory.arp.updated AS updated,count(netventory.arp.device_id) AS number_of_devices from netventory.arp where (netventory.arp.updated >= (curdate() - interval 3 day)) group by netventory.arp.mac

CREATE TABLE cidr (
id int(11) NOT NULL AUTO_INCREMENT,
cidr varchar(50) DEFAULT NULL,
subnet_mask varchar(100) DEFAULT NULL,
subnet_class varchar(1) DEFAULT NULL,
total_ips bigint(10) DEFAULT NULL,
usable_ips bigint(10) DEFAULT NULL,
PRIMARY KEY (id)
)

CREATE TABLE device (
id int(11) NOT NULL AUTO_INCREMENT,
ip varchar(50) DEFAULT '0.0.0.0',
hostname varchar(50) DEFAULT NULL,
sysname varchar(100) DEFAULT NULL,
dns_name varchar(50) DEFAULT NULL,
mac varchar(50) DEFAULT NULL,
description varchar(500) DEFAULT NULL,
manufacturer varchar(500) DEFAULT NULL,
syslocation varchar(500) DEFAULT NULL,
model varchar(500) DEFAULT NULL,
firmware_p varchar(500) DEFAULT NULL,
firmware_s varchar(500) DEFAULT NULL,
serial varchar(500) DEFAULT NULL,
rom varchar(500) DEFAULT NULL,
oid_id int(11) NOT NULL DEFAULT '1',
snmp_id int(11) NOT NULL DEFAULT '1',
location_id int(11) NOT NULL DEFAULT '0',
snmp_enabled tinyint(1) NOT NULL DEFAULT '0',
snmp_retries tinyint(1) NOT NULL DEFAULT '3',
snmp_check datetime DEFAULT NULL,
ping_check datetime DEFAULT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime NOT NULL,
PRIMARY KEY (id),
KEY oid_id (oid_id),
KEY snmp (snmp_id),
CONSTRAINT oid FOREIGN KEY (oid_id) REFERENCES oid (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT snmp FOREIGN KEY (snmp_id) REFERENCES snmp (id) ON DELETE CASCADE ON UPDATE CASCADE
)

CREATE VIEW netventory.device_interface_view AS select netventory.device.ip AS device,netventory.interface.port AS port,netventory.interface.module AS module,netventory.interface.port_name AS port_name,ifnull(ifnull(netventory.device.sysname,netventory.device.dns_name),netventory.device.hostname) AS name,netventory.interface.port_alias AS port_alias,netventory.lldp.ip_address AS client_ip,netventory.lldp.mac_address AS client_mac from ((netventory.interface left join netventory.device on((netventory.interface.device_id = netventory.device.id))) left join netventory.lldp on((netventory.interface.id = netventory.lldp.interface_id))) order by netventory.device.ip,netventory.interface.port_name,netventory.interface.port,netventory.interface.port_alias,netventory.lldp.ip_address

CREATE VIEW netventory.device_vlan_view AS select netventory.device.ip AS device_ip,netventory.device.sysname AS device_name,netventory.vlan_discover.vlan AS vlan,netventory.vlan_discover.name AS vlan name from (netventory.vlan_discover left join netventory.device on((netventory.vlan_discover.device_id = netventory.device.id))) order by netventory.device.ip,netventory.vlan_discover.vlan

CREATE TABLE dhcp (
id int(11) NOT NULL AUTO_INCREMENT,
ip varchar(100) NOT NULL,
mac varchar(50) NOT NULL,
hostname varchar(500) DEFAULT NULL,
network_id int(11) DEFAULT '0',
updated datetime NOT NULL,
modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id)
)

CREATE VIEW netventory.dhcp_view AS select netventory.dhcp.ip AS ip,netventory.dhcp.mac AS mac,netventory.dhcp.hostname AS hostname,concat(netventory.network.network,'/',netventory.network.cidr_id) AS network,netventory.dhcp.updated AS updated from ((netventory.dhcp left join netventory.network on((netventory.dhcp.network_id = netventory.network.id))) left join netventory.cidr on((netventory.network.cidr_id = netventory.cidr.id))) where (netventory.dhcp.updated >= (curdate() - interval 3 day)) order by netventory.dhcp.network_id desc,netventory.dhcp.ip

CREATE TABLE endpoints (
id int(11) NOT NULL AUTO_INCREMENT,
hostname varchar(50) DEFAULT NULL,
ip varchar(50) NOT NULL,
mac varchar(50) DEFAULT NULL,
oid_id int(11) DEFAULT '1',
snmp_id int(11) DEFAULT NULL,
location_id int(11) DEFAULT '1',
added date NOT NULL,
updated date NOT NULL,
modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id),
KEY oid_id (oid_id),
KEY FK_endpoints_snmp (snmp_id),
CONSTRAINT FK_endpoints_snmp FOREIGN KEY (snmp_id) REFERENCES snmp (id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT endpoints_ibfk_1 FOREIGN KEY (oid_id) REFERENCES oid (id) ON DELETE CASCADE ON UPDATE CASCADE
)

CREATE TABLE fdb (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) NOT NULL DEFAULT '0',
interface_id int(11) NOT NULL DEFAULT '0',
mac varchar(50) DEFAULT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id),
KEY device_id (device_id),
KEY FK_fdb_interface (interface_id),
CONSTRAINT device_id FOREIGN KEY (device_id) REFERENCES device (id),
CONSTRAINT FK_fdb_interface FOREIGN KEY (interface_id) REFERENCES interface (id)
)

CREATE VIEW netventory.fdb_view AS select ifnull(netventory.device.sysname,ifnull(netventory.device.hostname,netventory.device.dns_name)) AS switch_name,netventory.device.ip AS switch_ip,netventory.interface.port_name AS port,netventory.interface.port_alias AS port_alias,netventory.fdb.mac AS mac from ((netventory.fdb left join netventory.device on((netventory.fdb.device_id = netventory.device.id))) left join netventory.interface on((netventory.fdb.interface_id = netventory.interface.id))) where ((not((netventory.interface.port_name like 'Trk%'))) and (netventory.fdb.updated >= (curdate() - interval 7 day)))

CREATE TABLE interface (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) NOT NULL DEFAULT '0',
port int(11) NOT NULL,
port_name varchar(50) DEFAULT NULL,
port_alias varchar(100) DEFAULT NULL,
port_admin enum('enable','disable') DEFAULT 'enable',
port_poe enum('enable','disable','none') DEFAULT 'enable',
module tinyint(1) NOT NULL DEFAULT '0',
vlan smallint(4) NOT NULL DEFAULT '0',
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id),
KEY FK_interface_device (device_id),
CONSTRAINT FK_interface_device FOREIGN KEY (device_id) REFERENCES device (id)
)

CREATE VIEW netventory.interface_fdb_view AS select netventory.interface.port AS port,netventory.interface.port_name AS port_name,netventory.interface.port_alias AS port_alias,netventory.fdb.mac AS mac,netventory.device.ip AS ip,netventory.device.sysname AS sysname from ((netventory.fdb left join netventory.interface on((netventory.fdb.interface_id = netventory.interface.id))) left join netventory.device on((netventory.fdb.device_id = netventory.device.id)))

CREATE TABLE ipv4_addresses (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) DEFAULT NULL,
ip varchar(50) NOT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id),
KEY FK_ipv4_addresses_device (device_id),
CONSTRAINT FK_ipv4_addresses_device FOREIGN KEY (device_id) REFERENCES device (id)
)

CREATE TABLE lldp (
id int(11) NOT NULL AUTO_INCREMENT,
interface_id int(11) NOT NULL DEFAULT '0',
name varchar(100) DEFAULT NULL,
ip_address varchar(50) DEFAULT NULL,
mac_address varchar(50) DEFAULT NULL,
description varchar(500) DEFAULT NULL,
remote_port varchar(50) DEFAULT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id),
KEY FK_lldp_interface (interface_id),
CONSTRAINT FK_lldp_interface FOREIGN KEY (interface_id) REFERENCES interface (id)
)

CREATE VIEW netventory.lldp_view AS select netventory.device.id AS device_id,netventory.interface.id AS interface_id,netventory.lldp.id AS lldp_id,netventory.interface.port AS port,netventory.interface.port_name AS port_name,netventory.interface.port_alias AS port_alias,netventory.device.ip AS switch_ip,netventory.device.hostname AS switch_name,netventory.lldp.name AS device_name,netventory.lldp.ip_address AS device_ip,netventory.lldp.mac_address AS device_mac,netventory.lldp.description AS device_description,netventory.lldp.remote_port AS device_port,netventory.lldp.updated AS updated from ((netventory.lldp left join netventory.interface on((netventory.lldp.interface_id = netventory.interface.id))) left join netventory.device on((netventory.interface.device_id = netventory.device.id)))

CREATE TABLE logons (
id int(11) NOT NULL AUTO_INCREMENT,
timestamp datetime DEFAULT NULL,
domain_controller varchar(50) DEFAULT NULL,
domain varchar(50) NOT NULL DEFAULT 'wvcmsdom',
users_id int(11) DEFAULT '0',
endpoints_id int(11) DEFAULT '0',
added date NOT NULL,
updated date NOT NULL,
modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id)
)

CREATE VIEW netventory.logons_view AS select netventory.users.first_name AS first_name,netventory.users.last_name AS last_name,netventory.users.username AS username,netventory.endpoints.hostname AS hostname,netventory.endpoints.ip AS ip,netventory.logons.timestamp AS time,netventory.logons.domain_controller AS domain_controller,netventory.logons.domain AS domain from ((netventory.logons left join netventory.users on((netventory.logons.users_id = netventory.users.id))) left join netventory.endpoints on((netventory.logons.endpoints_id = netventory.endpoints.id))) where ((netventory.users.username <> '-') and (netventory.users.last_name <> '') and (not((netventory.users.first_name like '%-%'))) and (not((netventory.endpoints.hostname like 'chws%'))) and (not((netventory.endpoints.hostname like 'chwv%'))) and (not((netventory.endpoints.hostname like 'chlv%')))) group by netventory.endpoints.ip order by netventory.users.first_name,netventory.users.last_name

CREATE TABLE network (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) NOT NULL DEFAULT '1',
name varchar(250) NOT NULL,
short_name varchar(50) NOT NULL,
short_subnet varchar(100) DEFAULT NULL,
subnet_name varchar(100) DEFAULT NULL,
cidr_id int(11) DEFAULT NULL,
interface_id int(11) DEFAULT NULL,
location_id int(11) DEFAULT NULL,
service_provider varchar(200) DEFAULT NULL,
external_ip varchar(50) DEFAULT NULL,
network varchar(50) DEFAULT NULL,
first_usable varchar(50) DEFAULT NULL,
last_usable varchar(50) DEFAULT NULL,
gateway varchar(50) DEFAULT NULL,
dns_1 varchar(50) DEFAULT NULL,
dns_2 varchar(50) DEFAULT NULL,
dns_3 varchar(50) DEFAULT NULL,
bandwidth_mbps varchar(100) DEFAULT NULL,
comments varchar(500) DEFAULT NULL,
type enum('WAN','LAN','Other') DEFAULT 'LAN',
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id),
KEY device_id (device_id),
KEY FK_network_cidr (cidr_id),
KEY FK_network_interface (interface_id) USING BTREE,
CONSTRAINT FK_network_cidr FOREIGN KEY (cidr_id) REFERENCES cidr (id),
CONSTRAINT FK_network_device FOREIGN KEY (device_id) REFERENCES device (id),
CONSTRAINT FK_network_interface FOREIGN KEY (interface_id) REFERENCES interface (id)
)

CREATE TABLE oid (
id int(11) NOT NULL AUTO_INCREMENT,
manufacturer_name varchar(500) DEFAULT '0',
manufacturer_type varchar(500) DEFAULT '0',
vlan varchar(100) DEFAULT NULL,
vlan_create varchar(100) DEFAULT NULL,
vlan_name varchar(100) DEFAULT NULL,
vlan_interface varchar(100) DEFAULT NULL,
int_name varchar(100) DEFAULT NULL,
int_descr varchar(100) DEFAULT NULL,
int_alias varchar(100) DEFAULT NULL,
int_admin varchar(100) DEFAULT NULL,
int_poe varchar(100) DEFAULT NULL,
int_duplex varchar(100) DEFAULT NULL,
int_speed varchar(100) DEFAULT NULL,
fdb varchar(100) DEFAULT NULL,
arp varchar(100) DEFAULT NULL,
lldp varchar(100) DEFAULT NULL,
lldp_address varchar(100) DEFAULT NULL,
network varchar(100) DEFAULT NULL,
network_int varchar(100) DEFAULT NULL,
sysdescr varchar(100) DEFAULT NULL,
sysobjectid varchar(100) DEFAULT NULL,
sysuptime varchar(100) DEFAULT NULL,
syscontact varchar(100) DEFAULT NULL,
sysname varchar(100) DEFAULT NULL,
syslocation varchar(100) DEFAULT NULL,
sysservices varchar(100) DEFAULT NULL,
model varchar(100) DEFAULT NULL,
firmware_p varchar(100) DEFAULT NULL,
firmware_s varchar(100) DEFAULT NULL,
serial varchar(100) DEFAULT NULL,
manufacturer varchar(100) DEFAULT NULL,
rom varchar(100) DEFAULT NULL,
mac varchar(100) DEFAULT NULL,
alt_ip varchar(100) DEFAULT NULL,
port_auth_set varchar(100) DEFAULT NULL,
dot1x_auth_method varchar(100) DEFAULT NULL,
dot1x_session_time varchar(100) DEFAULT NULL,
dot1x_term_cause varchar(100) DEFAULT NULL,
dot1x_username varchar(100) DEFAULT NULL,
dot1x_mac varchar(100) DEFAULT NULL,
PRIMARY KEY (id)
)

CREATE TABLE oui (
id int(11) NOT NULL AUTO_INCREMENT,
mac varchar(50) NOT NULL,
vendor varchar(150) NOT NULL,
manufacturer varchar(150) DEFAULT NULL,
description varchar(250) DEFAULT NULL,
updated timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id)
)

CREATE TABLE port_auth (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) NOT NULL DEFAULT '0',
interface_id int(11) NOT NULL DEFAULT '0',
users_id int(11) DEFAULT NULL,
endpoints_id int(11) DEFAULT NULL,
auth_method varchar(50) DEFAULT NULL,
session_time int(11) DEFAULT NULL,
term_cause varchar(50) DEFAULT NULL,
client_name varchar(50) DEFAULT NULL,
mac varchar(50) DEFAULT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime NOT NULL,
PRIMARY KEY (id) USING BTREE,
KEY FK_port_auth_device (device_id),
KEY FK_port_auth_interface (interface_id),
KEY FK_port_auth_users (users_id),
KEY FK_port_auth_endpoints (endpoints_id),
CONSTRAINT FK_port_auth_endpoints FOREIGN KEY (endpoints_id) REFERENCES endpoints (id),
CONSTRAINT FK_port_auth_device FOREIGN KEY (device_id) REFERENCES device (id),
CONSTRAINT FK_port_auth_interface FOREIGN KEY (interface_id) REFERENCES interface (id),
CONSTRAINT FK_port_auth_users FOREIGN KEY (users_id) REFERENCES users (id)
)

CREATE VIEW netventory.port_auth_view AS select netventory.device.id AS id,netventory.interface.id AS interface_id,netventory.users.id AS user_id,netventory.endpoints.id AS endpoint_id,netventory.device.hostname AS switch_hostname,netventory.device.ip AS switch_ip,netventory.interface.port AS port,netventory.interface.port_name AS port_name,netventory.interface.port_alias AS port_alias,concat(netventory.users.first_name,' ',netventory.users.last_name) AS name,netventory.users.username AS username,netventory.users.title AS title,netventory.endpoints.hostname AS hostname,netventory.arp.ip AS ip,netventory.endpoints.mac AS endpoint_mac,netventory.port_auth.auth_method AS auth_method,netventory.port_auth.session_time AS session_time,netventory.port_auth.term_cause AS term_cause,netventory.port_auth.client_name AS auth_name,netventory.port_auth.mac AS client_mac,netventory.port_auth.updated AS updated from (((((netventory.port_auth left join netventory.interface on((netventory.port_auth.interface_id = netventory.interface.id))) left join netventory.users on((netventory.port_auth.users_id = netventory.users.id))) left join netventory.endpoints on((netventory.port_auth.endpoints_id = netventory.endpoints.id))) left join netventory.device on((netventory.port_auth.device_id = netventory.device.id))) left join netventory.arp on((netventory.port_auth.mac = netventory.arp.mac))) order by netventory.device.ip,netventory.interface.port

CREATE TABLE snmp (
id int(11) NOT NULL AUTO_INCREMENT,
community varchar(255) DEFAULT NULL,
authlevel enum('noAuthNoPriv','authNoPriv','authPriv') DEFAULT NULL,
authname varchar(64) DEFAULT NULL,
authpass varchar(64) DEFAULT NULL,
authalgo enum('MD5','SHA') DEFAULT NULL,
cryptopass varchar(64) DEFAULT NULL,
cryptoalgo enum('AES','DES','') DEFAULT NULL,
version enum('1','2c','3') NOT NULL DEFAULT '2c',
port smallint(5) unsigned NOT NULL DEFAULT '161',
PRIMARY KEY (id)
)

CREATE TABLE switch_configuration (
id int(11) NOT NULL AUTO_INCREMENT,
network_id int(11) NOT NULL DEFAULT '0',
untagged varchar(50) NOT NULL DEFAULT '2010',
tagged varchar(250) NOT NULL DEFAULT '101',
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id)
)

CREATE TABLE users (
id int(11) NOT NULL AUTO_INCREMENT,
first_name varchar(150) DEFAULT NULL,
last_name varchar(150) DEFAULT NULL,
username varchar(150) DEFAULT NULL,
email varchar(150) DEFAULT NULL,
title varchar(100) DEFAULT NULL,
desk_phone varchar(20) DEFAULT NULL,
cell_phone varchar(20) DEFAULT NULL,
department varchar(100) DEFAULT NULL,
division varchar(100) DEFAULT NULL,
employee_id int(5) DEFAULT NULL,
badge_number int(5) DEFAULT NULL,
account_status enum('Enabled','Disabled') NOT NULL DEFAULT 'Enabled',
account_lockout enum('Unlocked','Locked','Unknown') NOT NULL DEFAULT 'Unlocked',
last_logon datetime DEFAULT NULL,
pwd_set datetime DEFAULT NULL,
pwd_expr datetime DEFAULT NULL,
added date NOT NULL,
updated date NOT NULL,
modified timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id)
)

CREATE TABLE vlan (
id int(11) NOT NULL AUTO_INCREMENT,
vlan int(11) NOT NULL,
name varchar(500) DEFAULT NULL,
short_name varchar(500) DEFAULT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id)
)

CREATE TABLE vlan_discover (
id int(11) NOT NULL AUTO_INCREMENT,
device_id int(11) DEFAULT NULL,
vlan smallint(4) NOT NULL DEFAULT '0',
name varchar(500) DEFAULT NULL,
updated timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
added datetime DEFAULT NULL,
PRIMARY KEY (id),
KEY FK_vlan_discover_device (device_id),
CONSTRAINT FK_vlan_discover_device FOREIGN KEY (device_id) REFERENCES device (id)
)

CREATE VIEW netventory.vlan_discover_view AS select netventory.device.ip AS switch_ip,netventory.device.sysname AS switch_sysname,netventory.vlan_discover.vlan AS vlan,netventory.vlan_discover.name AS vlan_name from (netventory.vlan_discover left join netventory.device on((netventory.vlan_discover.device_id = netventory.device.id))) where (netventory.vlan_discover.updated >= (curdate() - interval 3 day)) group by netventory.vlan_discover.name order by netventory.vlan_discover.vlan,netventory.device.ip

CREATE VIEW netventory.vlan_unique_view AS select distinct netventory.vlan_discover.name AS vlan_name,netventory.vlan_discover.vlan AS vlan,netventory.device.ip AS switch_ip,netventory.device.sysname AS switch_sysname from (netventory.vlan_discover left join netventory.device on((netventory.vlan_discover.device_id = netventory.device.id))) where (netventory.vlan_discover.updated >= (curdate() - interval 3 day)) group by netventory.vlan_discover.name order by netventory.vlan_discover.name,netventory.vlan_discover.vlan
